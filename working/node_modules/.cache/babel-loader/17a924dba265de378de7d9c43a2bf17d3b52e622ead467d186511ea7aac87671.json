{"ast":null,"code":"var _jsxFileName = \"/Users/clayreimus/Documents/KellyCalc/kelly-criterion-calculator/src/Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Chart from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BankrollChart(_ref) {\n  _s();\n  let {\n    bankroll,\n    payoff,\n    probability,\n    bets\n  } = _ref;\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const f = (payoff * probability - (1 - probability)) / payoff;\n    const betFraction = Math.min(f, 1);\n    const expectedGrowthRate = 1 + betFraction * probability;\n    const data = [];\n    let currentBankroll = bankroll;\n    for (let i = 0; i <= bets; i++) {\n      data.push({\n        x: currentBankroll,\n        y: i\n      });\n      currentBankroll *= expectedGrowthRate;\n    }\n    const chart = new Chart(chartRef.current, {\n      type: 'line',\n      data: {\n        datasets: [{\n          label: 'Bankroll Growth',\n          data: data,\n          fill: false,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }]\n      },\n      options: {\n        scales: {\n          x: {\n            type: 'linear',\n            position: 'bottom'\n          },\n          y: {\n            type: 'linear',\n            position: 'left'\n          }\n        }\n      }\n    });\n    return () => chart.destroy();\n  }, [bankroll, payoff, probability, bets]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n}\n_s(BankrollChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = BankrollChart;\nvar _c;\n$RefreshReg$(_c, \"BankrollChart\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Chart","jsxDEV","_jsxDEV","BankrollChart","_ref","_s","bankroll","payoff","probability","bets","chartRef","f","betFraction","Math","min","expectedGrowthRate","data","currentBankroll","i","push","x","y","chart","current","type","datasets","label","fill","borderColor","tension","options","scales","position","destroy","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/clayreimus/Documents/KellyCalc/kelly-criterion-calculator/src/Chart.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport Chart from 'chart.js'\n\nexport default function BankrollChart({ bankroll, payoff, probability, bets }) {\n  const chartRef = useRef(null)\n\n  useEffect(() => {\n    const f = (payoff * probability - (1 - probability)) / payoff\n    const betFraction = Math.min(f, 1)\n    const expectedGrowthRate = 1 + betFraction * probability\n\n    const data = []\n    let currentBankroll = bankroll\n\n    for (let i = 0; i <= bets; i++) {\n      data.push({ x: currentBankroll, y: i })\n      currentBankroll *= expectedGrowthRate\n    }\n\n    const chart = new Chart(chartRef.current, {\n      type: 'line',\n      data: {\n        datasets: [\n          {\n            label: 'Bankroll Growth',\n            data: data,\n            fill: false,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.1,\n          },\n        ],\n      },\n      options: {\n        scales: {\n          x: {\n            type: 'linear',\n            position: 'bottom',\n          },\n          y: {\n            type: 'linear',\n            position: 'left',\n          },\n        },\n      },\n    })\n\n    return () => chart.destroy()\n  }, [bankroll, payoff, probability, bets])\n\n  return <canvas ref={chartRef} />\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAA0C;EAAAC,EAAA;EAAA,IAAzC;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,WAAW;IAAEC;EAAK,CAAC,GAAAL,IAAA;EAC3E,MAAMM,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,MAAMa,CAAC,GAAG,CAACJ,MAAM,GAAGC,WAAW,IAAI,CAAC,GAAGA,WAAW,CAAC,IAAID,MAAM;IAC7D,MAAMK,WAAW,GAAGC,IAAI,CAACC,GAAG,CAACH,CAAC,EAAE,CAAC,CAAC;IAClC,MAAMI,kBAAkB,GAAG,CAAC,GAAGH,WAAW,GAAGJ,WAAW;IAExD,MAAMQ,IAAI,GAAG,EAAE;IACf,IAAIC,eAAe,GAAGX,QAAQ;IAE9B,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIT,IAAI,EAAES,CAAC,EAAE,EAAE;MAC9BF,IAAI,CAACG,IAAI,CAAC;QAAEC,CAAC,EAAEH,eAAe;QAAEI,CAAC,EAAEH;MAAE,CAAC,CAAC;MACvCD,eAAe,IAAIF,kBAAkB;IACvC;IAEA,MAAMO,KAAK,GAAG,IAAItB,KAAK,CAACU,QAAQ,CAACa,OAAO,EAAE;MACxCC,IAAI,EAAE,MAAM;MACZR,IAAI,EAAE;QACJS,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,iBAAiB;UACxBV,IAAI,EAAEA,IAAI;UACVW,IAAI,EAAE,KAAK;UACXC,WAAW,EAAE,mBAAmB;UAChCC,OAAO,EAAE;QACX,CAAC;MAEL,CAAC;MACDC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNX,CAAC,EAAE;YACDI,IAAI,EAAE,QAAQ;YACdQ,QAAQ,EAAE;UACZ,CAAC;UACDX,CAAC,EAAE;YACDG,IAAI,EAAE,QAAQ;YACdQ,QAAQ,EAAE;UACZ;QACF;MACF;IACF,CAAC,CAAC;IAEF,OAAO,MAAMV,KAAK,CAACW,OAAO,EAAE;EAC9B,CAAC,EAAE,CAAC3B,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAEC,IAAI,CAAC,CAAC;EAEzC,oBAAOP,OAAA;IAAQgC,GAAG,EAAExB;EAAS;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAClC;AAACjC,EAAA,CA/CuBF,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}