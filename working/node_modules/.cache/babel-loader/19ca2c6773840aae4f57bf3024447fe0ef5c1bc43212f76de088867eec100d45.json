{"ast":null,"code":"import _slicedToArray from\"/Users/clayreimus/Documents/KellyCalc/kelly-criterion-calculator/working/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import BankrollChart from'./Chart';import'./style.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(100),_useState2=_slicedToArray(_useState,2),bankroll=_useState2[0],setBankroll=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),payoff=_useState4[0],setPayoff=_useState4[1];var _useState5=useState(0.6),_useState6=_slicedToArray(_useState5,2),probability=_useState6[0],setProbability=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),bets=_useState8[0],setbets=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),result=_useState10[0],setResult=_useState10[1];var handleSubmit=function handleSubmit(event){event.preventDefault();var f=(payoff*probability-(1-probability))/payoff;var betFraction=Math.min(f,1);var wagerAmount=betFraction*bankroll;var finalGrowthRate=1+betFraction*probability;var finalBankroll=bankroll*Math.pow(finalGrowthRate,bets);if(betFraction<=0){setResult('This bet has a negative EV. This calculator is only helpful for bet sizing in games where the player believes they have an edge.');}else{var roundedBetFraction=Math.round(betFraction*100);setResult(\"Bet \".concat(roundedBetFraction,\"% of your bankroll per bet, starting with $\").concat(wagerAmount.toFixed(2),\". Your expected bankroll after \").concat(bets,\" bet(s) is $\").concat(finalBankroll.toFixed(2),\".\"));}};var handleProbabilityChange=function handleProbabilityChange(e){var inputValue=e.target.value.replace('%','');var percentageValue=parseFloat(inputValue)/100;if(!isNaN(percentageValue)){setProbability(percentageValue);}};var finalGrowthRate=1+Math.min((payoff*probability-(1-probability))/payoff,1)*probability;var probabilityNumber=parseFloat(probability);var probabilityFormatted=(probabilityNumber*100).toFixed(0)+'%';return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Kelly Criterion Calculator\"}),/*#__PURE__*/_jsx(\"p\",{children:\"The Kelly Criterion is a formula used to determine the optimal bet size based on an estimated probability of winning and net payout odds.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"The calculator will recommend a bet size and provide an estimate of your expected bankroll growth if you follow the recommended sizing for a specified number of bets.\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"bankroll\",children:\"Starting Bankroll:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"bankroll\",name:\"bankroll\",value:\"$\".concat(bankroll),onChange:function onChange(e){return setBankroll(parseFloat(e.target.value.replace('$','')));},required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"payoff\",children:\"Net Payout Odds (X:1):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"payoff\",name:\"payoff\",value:payoff,onChange:function onChange(e){return setPayoff(e.target.value);},required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"probability\",children:\"Probability of Winning:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"probability\",name:\"probability\",maxLength:\"4\",pattern:\"^[0-9]{1,3}%?$\",value:probabilityFormatted,onChange:handleProbabilityChange,required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"bets\",children:\"Number of Bets:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"bets\",name:\"bets\",value:bets,onChange:function onChange(e){return setbets(e.target.value);},required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Calculate\"})]}),/*#__PURE__*/_jsx(\"div\",{id:\"result\",children:result}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Bankroll Visualization\"}),/*#__PURE__*/_jsx(BankrollChart,{bankroll:bankroll,bets:bets,growthRate:finalGrowthRate})]})]});}export default App;","map":{"version":3,"names":["React","useState","BankrollChart","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","bankroll","setBankroll","_useState3","_useState4","payoff","setPayoff","_useState5","_useState6","probability","setProbability","_useState7","_useState8","bets","setbets","_useState9","_useState10","result","setResult","handleSubmit","event","preventDefault","f","betFraction","Math","min","wagerAmount","finalGrowthRate","finalBankroll","pow","roundedBetFraction","round","concat","toFixed","handleProbabilityChange","e","inputValue","target","value","replace","percentageValue","parseFloat","isNaN","probabilityNumber","probabilityFormatted","className","children","onSubmit","htmlFor","type","id","name","onChange","required","maxLength","pattern","growthRate"],"sources":["/Users/clayreimus/Documents/KellyCalc/kelly-criterion-calculator/working/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport BankrollChart from './Chart'\nimport './style.css'\n\nfunction App() {\n  const [bankroll, setBankroll] = useState(100)\n  const [payoff, setPayoff] = useState(1)\n  const [probability, setProbability] = useState(0.6)\n  const [bets, setbets] = useState(1)\n  const [result, setResult] = useState('')\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    const f = (payoff * probability - (1 - probability)) / payoff\n    const betFraction = Math.min(f, 1)\n    const wagerAmount = betFraction * bankroll\n    const finalGrowthRate = 1 + betFraction * probability\n    const finalBankroll = bankroll * finalGrowthRate ** bets\n\n    if (betFraction <= 0) {\n      setResult(\n        'This bet has a negative EV. This calculator is only helpful for bet sizing in games where the player believes they have an edge.'\n      )\n    } else {\n      const roundedBetFraction = Math.round(betFraction * 100)\n      setResult(\n        `Bet ${roundedBetFraction}% of your bankroll per bet, starting with $${wagerAmount.toFixed(\n          2\n        )}. Your expected bankroll after ${bets} bet(s) is $${finalBankroll.toFixed(\n          2\n        )}.`\n      )\n    }\n  }\n\n  const handleProbabilityChange = (e) => {\n    const inputValue = e.target.value.replace('%', '')\n    const percentageValue = parseFloat(inputValue) / 100\n    if (!isNaN(percentageValue)) {\n      setProbability(percentageValue)\n    }\n  }\n\n  const finalGrowthRate =\n    1 +\n    Math.min((payoff * probability - (1 - probability)) / payoff, 1) *\n      probability\n\n  const probabilityNumber = parseFloat(probability)\n  const probabilityFormatted = (probabilityNumber * 100).toFixed(0) + '%'\n\n  return (\n    <div className=\"container\">\n      <h1>Kelly Criterion Calculator</h1>\n      <p>\n        The Kelly Criterion is a formula used to determine the optimal bet size\n        based on an estimated probability of winning and net payout odds.\n      </p>\n      <p>\n        The calculator will recommend a bet size and provide an estimate of your\n        expected bankroll growth if you follow the recommended sizing for a\n        specified number of bets.\n      </p>\n\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"bankroll\">Starting Bankroll:</label>\n        <input\n          type=\"text\"\n          id=\"bankroll\"\n          name=\"bankroll\"\n          value={`$${bankroll}`}\n          onChange={(e) =>\n            setBankroll(parseFloat(e.target.value.replace('$', '')))\n          }\n          required\n        />\n\n        <label htmlFor=\"payoff\">Net Payout Odds (X:1):</label>\n        <input\n          type=\"number\"\n          id=\"payoff\"\n          name=\"payoff\"\n          value={payoff}\n          onChange={(e) => setPayoff(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"probability\">Probability of Winning:</label>\n        <input\n          type=\"text\"\n          id=\"probability\"\n          name=\"probability\"\n          maxLength=\"4\"\n          pattern=\"^[0-9]{1,3}%?$\"\n          value={probabilityFormatted}\n          onChange={handleProbabilityChange}\n          required\n        />\n\n        <label htmlFor=\"bets\">Number of Bets:</label>\n        <input\n          type=\"number\"\n          id=\"bets\"\n          name=\"bets\"\n          value={bets}\n          onChange={(e) => setbets(e.target.value)}\n          required\n        />\n\n        <button type=\"submit\">Calculate</button>\n      </form>\n\n      <div id=\"result\">{result}</div>\n      <div>\n        <h3>Bankroll Visualization</h3>\n        <BankrollChart\n          bankroll={bankroll}\n          bets={bets}\n          growthRate={finalGrowthRate}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"8JAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,aAAa,KAAM,SAAS,CACnC,MAAO,aAAa,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEpB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,IAAAC,SAAA,CAAgCP,QAAQ,CAAC,GAAG,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAtCG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAC5B,IAAAI,UAAA,CAA4BZ,QAAQ,CAAC,CAAC,CAAC,CAAAa,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAhCE,MAAM,CAAAD,UAAA,IAAEE,SAAS,CAAAF,UAAA,IACxB,IAAAG,UAAA,CAAsChB,QAAQ,CAAC,GAAG,CAAC,CAAAiB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAA5CE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAClC,IAAAG,UAAA,CAAwBpB,QAAQ,CAAC,CAAC,CAAC,CAAAqB,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAA5BE,IAAI,CAAAD,UAAA,IAAEE,OAAO,CAAAF,UAAA,IACpB,IAAAG,UAAA,CAA4BxB,QAAQ,CAAC,EAAE,CAAC,CAAAyB,WAAA,CAAAhB,cAAA,CAAAe,UAAA,IAAjCE,MAAM,CAAAD,WAAA,IAAEE,SAAS,CAAAF,WAAA,IAExB,GAAM,CAAAG,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,KAAK,CAAK,CAC9BA,KAAK,CAACC,cAAc,EAAE,CAEtB,GAAM,CAAAC,CAAC,CAAG,CAACjB,MAAM,CAAGI,WAAW,EAAI,CAAC,CAAGA,WAAW,CAAC,EAAIJ,MAAM,CAC7D,GAAM,CAAAkB,WAAW,CAAGC,IAAI,CAACC,GAAG,CAACH,CAAC,CAAE,CAAC,CAAC,CAClC,GAAM,CAAAI,WAAW,CAAGH,WAAW,CAAGtB,QAAQ,CAC1C,GAAM,CAAA0B,eAAe,CAAG,CAAC,CAAGJ,WAAW,CAAGd,WAAW,CACrD,GAAM,CAAAmB,aAAa,CAAG3B,QAAQ,CAAAuB,IAAA,CAAAK,GAAA,CAAGF,eAAe,CAAId,IAAI,EAExD,GAAIU,WAAW,EAAI,CAAC,CAAE,CACpBL,SAAS,CACP,kIAAkI,CACnI,CACH,CAAC,IAAM,CACL,GAAM,CAAAY,kBAAkB,CAAGN,IAAI,CAACO,KAAK,CAACR,WAAW,CAAG,GAAG,CAAC,CACxDL,SAAS,QAAAc,MAAA,CACAF,kBAAkB,gDAAAE,MAAA,CAA8CN,WAAW,CAACO,OAAO,CACxF,CAAC,CACF,oCAAAD,MAAA,CAAkCnB,IAAI,iBAAAmB,MAAA,CAAeJ,aAAa,CAACK,OAAO,CACzE,CAAC,CACF,MACF,CACH,CACF,CAAC,CAED,GAAM,CAAAC,uBAAuB,CAAG,QAA1B,CAAAA,uBAAuBA,CAAIC,CAAC,CAAK,CACrC,GAAM,CAAAC,UAAU,CAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAACC,OAAO,CAAC,GAAG,CAAE,EAAE,CAAC,CAClD,GAAM,CAAAC,eAAe,CAAGC,UAAU,CAACL,UAAU,CAAC,CAAG,GAAG,CACpD,GAAI,CAACM,KAAK,CAACF,eAAe,CAAC,CAAE,CAC3B9B,cAAc,CAAC8B,eAAe,CAAC,CACjC,CACF,CAAC,CAED,GAAM,CAAAb,eAAe,CACnB,CAAC,CACDH,IAAI,CAACC,GAAG,CAAC,CAACpB,MAAM,CAAGI,WAAW,EAAI,CAAC,CAAGA,WAAW,CAAC,EAAIJ,MAAM,CAAE,CAAC,CAAC,CAC9DI,WAAW,CAEf,GAAM,CAAAkC,iBAAiB,CAAGF,UAAU,CAAChC,WAAW,CAAC,CACjD,GAAM,CAAAmC,oBAAoB,CAAG,CAACD,iBAAiB,CAAG,GAAG,EAAEV,OAAO,CAAC,CAAC,CAAC,CAAG,GAAG,CAEvE,mBACErC,KAAA,QAAKiD,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBpD,IAAA,OAAAoD,QAAA,CAAI,4BAA0B,EAAK,cACnCpD,IAAA,MAAAoD,QAAA,CAAG,2IAGH,EAAI,cACJpD,IAAA,MAAAoD,QAAA,CAAG,wKAIH,EAAI,cAEJlD,KAAA,SAAMmD,QAAQ,CAAE5B,YAAa,CAAA2B,QAAA,eAC3BpD,IAAA,UAAOsD,OAAO,CAAC,UAAU,CAAAF,QAAA,CAAC,oBAAkB,EAAQ,cACpDpD,IAAA,UACEuD,IAAI,CAAC,MAAM,CACXC,EAAE,CAAC,UAAU,CACbC,IAAI,CAAC,UAAU,CACfb,KAAK,KAAAN,MAAA,CAAM/B,QAAQ,CAAG,CACtBmD,QAAQ,CAAE,SAAAA,SAACjB,CAAC,QACV,CAAAjC,WAAW,CAACuC,UAAU,CAACN,CAAC,CAACE,MAAM,CAACC,KAAK,CAACC,OAAO,CAAC,GAAG,CAAE,EAAE,CAAC,CAAC,CAAC,EACzD,CACDc,QAAQ,OACR,cAEF3D,IAAA,UAAOsD,OAAO,CAAC,QAAQ,CAAAF,QAAA,CAAC,wBAAsB,EAAQ,cACtDpD,IAAA,UACEuD,IAAI,CAAC,QAAQ,CACbC,EAAE,CAAC,QAAQ,CACXC,IAAI,CAAC,QAAQ,CACbb,KAAK,CAAEjC,MAAO,CACd+C,QAAQ,CAAE,SAAAA,SAACjB,CAAC,QAAK,CAAA7B,SAAS,CAAC6B,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,EAAC,CAC3Ce,QAAQ,OACR,cAEF3D,IAAA,UAAOsD,OAAO,CAAC,aAAa,CAAAF,QAAA,CAAC,yBAAuB,EAAQ,cAC5DpD,IAAA,UACEuD,IAAI,CAAC,MAAM,CACXC,EAAE,CAAC,aAAa,CAChBC,IAAI,CAAC,aAAa,CAClBG,SAAS,CAAC,GAAG,CACbC,OAAO,CAAC,gBAAgB,CACxBjB,KAAK,CAAEM,oBAAqB,CAC5BQ,QAAQ,CAAElB,uBAAwB,CAClCmB,QAAQ,OACR,cAEF3D,IAAA,UAAOsD,OAAO,CAAC,MAAM,CAAAF,QAAA,CAAC,iBAAe,EAAQ,cAC7CpD,IAAA,UACEuD,IAAI,CAAC,QAAQ,CACbC,EAAE,CAAC,MAAM,CACTC,IAAI,CAAC,MAAM,CACXb,KAAK,CAAEzB,IAAK,CACZuC,QAAQ,CAAE,SAAAA,SAACjB,CAAC,QAAK,CAAArB,OAAO,CAACqB,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,EAAC,CACzCe,QAAQ,OACR,cAEF3D,IAAA,WAAQuD,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,WAAS,EAAS,GACnC,cAEPpD,IAAA,QAAKwD,EAAE,CAAC,QAAQ,CAAAJ,QAAA,CAAE7B,MAAM,EAAO,cAC/BrB,KAAA,QAAAkD,QAAA,eACEpD,IAAA,OAAAoD,QAAA,CAAI,wBAAsB,EAAK,cAC/BpD,IAAA,CAACF,aAAa,EACZS,QAAQ,CAAEA,QAAS,CACnBY,IAAI,CAAEA,IAAK,CACX2C,UAAU,CAAE7B,eAAgB,EAC5B,GACE,GACF,CAEV,CAEA,cAAe,CAAA9B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}